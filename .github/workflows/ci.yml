---
name: CI


# Trigger on pushes, PRs, and when the default branch is updated
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  # Run the same job on Linux, macOS and Windows
  # Helps catch OS specific issues
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest   # our shell scripts are not cross-platform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Deno (latest stable)
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x  # Use Deno 2.x to support
          # lockfile version 5

      # Cache Deno's module directory ($HOME/.deno)
      - name: Cache Deno modules
        uses: actions/cache@v4
        with:
          path: ~/.deno
          # The cache key includes the lock file so a change in deps
          # busts the cache
          key: ${{ runner.os }}-deno-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      # Lint the codebase
      - name: Run Deno lint
        working-directory: backend
        run: deno lint

      # Run the test suite (uses the task you defined)
      - name: Run tests
        working-directory: backend
        # The task already contains the needed permission flags
        run: deno task test

      # Upload test results as artifacts
      - name: Upload test report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-output
          path: ./backend/test-results/

      # Steps for frontend tests

      # Set up Node.js for frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      # Start backend test server for frontend tests
      - name: Start backend test server
        working-directory: backend
        # yamllint disable rule:line-length
        run: |
          deno run --allow-net --allow-read --allow-write --unstable-kv startTestServer.ts &
          echo $! > ../backend_test_server.pid
        # yamllint enable rule:line-length
      # Wait for backend test server to be ready
      - name: Wait for backend test server
        run: sleep 1

      # Run frontend tests
      - name: Run frontend tests
        working-directory: frontend
        run: npm run test

      # Optionally kill backend test server
      - name: Stop backend test server
        run: |
          kill $(cat backend_test_server.pid)
        continue-on-error: true
